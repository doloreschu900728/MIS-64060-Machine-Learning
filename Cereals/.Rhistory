summary(Model)
X_SQ <- data$X^(1/2)
Model = lm(Y~X_SQ, data = data)
summary(Model)
plot(data$X, Model$residuals, xlab = "X", ylab = "Residuals")
getwd()
setwd("/Users/Dolores/Desktop/R/MIS-64060-Machine-Learning/Cereal")
setwd("/Users/Dolores/Desktop/R")
setwd("/Users/Dolores/Desktop/R/MIS-64060-Machine-Learning/Cereals")
data <- read.csv("Careals.csv")
data <- read.csv("Cereals.csv")
data <- na.omit(data)
is.na(data)
mean(is.na(data))
sum(is.na(data))
mydata <- data.frame(x = c(1, 2, 3), y = c(4, NA, 5), y = c(0,0,0))
mydata
mydata <- data.frame(x = c(1, 2, 3), y = c(4, NA, 5), y = c(0,0,NA))
mydata
mydata <- data.frame(x = c(1, 2, 3), y = c(4, NA, 5), z = c(0,0,NA))
na.omit(mydata, col = y)
na.omit(mydata, cols = "y")
mydata <- data.table(mydata)
?data.table
install.packages("data.table")
library(data.table)
mydata <- data.table(mydata)
na.omit(mydata, cols = "y")
data_norm <- scale(data)
?scale
str(data)
data_norm <- scale(data[, c(1:3)])
data[, c(1:3)
]
data_norm <- scale(data[, -c(1:3)])
data_norm
head(data_norm)
colnames(data)
install.packages("cluster")
data_norm <- cbind(data[, 1:3], scale(data[, -c(1:3)]))
head(data_norm)
distance <- dist(data_norm, method = "euclidean")
distance
distance <- dist(data_norm[, -c(1:3)], method = "euclidean")
distance
hc1 <- hclust(distance, method = "complete")
hc1
plot(hc1)
plot(hc1, cex = 0.6, hang = -1)
library(cluster)
hc_single <- agnes(data_norm, method = "single")
?agnes
hc_complete <- agnes(data_norm, method = "complete")
hc_average <- agens (data_norm, method = "average")
hc_average <- agnes (data_norm, method = "average")
hc_average
agnes?
agnes
?agnes
hc_single$ac
hc_complete$ac
hc_average$ac
?agnes
hc_ward <- agnes(data_norm, method = "ward")
hc_ward$ac
pltree(hc_ward, cex = 0.6, hang = -1, main = "Dendrogram of agnes (Ward)")
summary(hc_ward)
---
title: "Customer Rating of Breakfast Cereals"
author: "Dolores Chu"
date: "11/13/2019"
output: html_document
---
##### The dataset Cereals.csv includes nutritional information, store display, and consumer ratings for 77 breakfast cereals.
##### Data Preprocessing. Remove all cereals with missing values.
```{r}
data <- read.csv("Cereals.csv")
data <- na.omit(data)
```
##### a. Apply hierarchical clustering to the data using Euclidean distance to the normalized measurements. Use Agnes to compare the clustering from single linkage, complete linkage, average linkage, and Ward. Choose the best method.
First, normalize data
```{r}
data_norm <- cbind(data[, 1:3], scale(data[, -c(1:3)]))
```
Apply hierarchical clustering to the data using Euclidean distance to the normalized measurements.
```{r}
distance <- dist(data_norm[, -c(1:3)], method = "euclidean")
hc1 <- hclust(distance, method = "complete")
plot(hc1, cex = 0.6, hang = -1)
```
hc_single <- agnes(data_norm, method = "single")
hc_complete <- agnes(data_norm, method = "complete")
hc_average <- agnes(data_norm, method = "average")
library(cluster)
hc_single <- agnes(data_norm, method = "single")
hc_complete <- agnes(data_norm, method = "complete")
hc_average <- agnes(data_norm, method = "average")
hc_ward <- agnes(data_norm, method = "ward")
hc_single$ac
hc_complete$ac
hc_average$ac
hc_ward$ac
pltree(hc_ward, cex = 0.6, hang = -1, main = "Dendrogram of agnes (Ward)")
screeplot(hc_ward)
pltree(hc_ward, cex = 0.6, hang = -1, main = "Dendrogram of agnes (Ward)")
hc_ward <- agnes(data_norm, method = "ward")
hc_single$ac
hc_complete$ac
hc_average$ac
hc_ward
?agnes()
pltree(hc_ward, cex = 0.6, hang = -1, main = "Dendrogram of agnes (Ward)")
rect.hclust(hc_ward, k = 3)
distance <- dist(data_norm[, -c(1:3)], method = "euclidean")
hc_ward <- hclust(distance, method = "ward")
plot(hc1, cex = 0.6, hang = -1)
hc_ward <- hclust(distance, method = "ward.D")
plot(hc1, cex = 0.6, hang = -1)
hc_ward <- hclust(distance, method = "ward.D")
plot(hc1, cex = 0.6, hang = -1)
rect.hclust(hc_ward, k = 3)
rect.hclust(hc_ward, k = 3, border = 1:3)
plot(hc1, cex = 0.6, hang = -1)
rect.hclust(hc_ward, k = 3, border = 1:3)
plot(hc1, cex = 0.6, hang = -1)
rect.hclust(hc_ward, k = 3)
plot(hc1, cex = 0.6, hang = -1)
rect.hclust(hc_ward, k = 3, border = 1:3)
plot(hc1, cex = 0.6, hang = -1)
rect.hclust(hc_ward, k = 4, border = 1:4)
plot(hc1, cex = 0.6)
rect.hclust(hc_ward, k = 4, border = 1:4)
plot(hc1, cex = 0.6, hang = -1)
rect.hclust(hc_ward, k = 3, border = 1:3)
plot(hc1, cex = 0.6, hang = -1)
plot(hc1, cex = 0.6, hang = -1)
rect.hclust(hc_ward, k = 3, border = 1:3)
rect.hclust(hclust(distance, method = "ward.D"), h = 9)
plot(hc1, cex = 0.6, hang = -1)
rect.hclust(hclust(distance, method = "ward.D"), h = 9)
hc_ward <- hclust(distance, method = "ward.D")
rect.hclust(hclust(distance, method = "ward.D"), h = 9)
hc_ward <- agnes(data_norm, method = "ward")
plot(hc1, cex = 0.6, hang = -1)
rect.hclust(hc_ward, k = 3, border = 1:3)
plot(hc1, cex = 0.6, hang = -1)
rect.hclust(hc_ward, k = 3, border = 1:3)
plot(hc1, cex = 0.6, hang = -1)
rect.hclust(hc_ward, k = 3)
plot(hc_ward, cex = 0.6, hang = -1)
hc_ward <- hclust(distance, method = "ward.D")
plot(hc_ward, cex = 0.6, hang = -1)
hc_ward <- agnes(data_norm, method = "ward")
plot(hc_ward, cex = 0.6, hang = -1)
hc_ward <- hclust(distance, method = "ward.D")
plot(hc_ward, cex = 0.6, hang = -1)
plot(hc_ward, cex = 0.6, hang = -1)
rect.hclust(hc_ward, k = 3)
plot(hc_ward, cex = 0.6, hang = -1)
rect.hclust(hc_ward, k = 6, border = 1:6)       # My dendrogram looks kinda weird... why?
plot(hc_ward, cex = 0.6, hang = -1)
rect.hclust(hc_ward, k = 6, border = 1:6)
library(caret)
ClusterA_index <- createDataPartition(p=0.95)
createDataPartition()
?plot(hc_ward, cex = 0.6, hang = -1)
?createDataPartition()
ClusterA_index <- createDataPartition(data_norm, p=0.95)
nrow(data_norm)
str(data_norm)
ClusterA_index <- createDataPartition(data_norm, p=0.95, list = FALSE)
install.packages("caTools")
set.seed(123)
ClusterA <- data_norm[sample(nrow(data_norm),67), ]
ClusterA_index <- as.numeric(rownames(ClusterA))
length(ClusterA_index)
nrow(data_norm)
ClusterB <- data_norm[-ClusterA_index,]
nrow(ClusterA)
nrow(ClusterB)
set.seed(123)
ClusterA <- data_norm[sample(nrow(data_norm),67), ]
ClusterA_index <- as.numeric(rownames(ClusterA))
length(ClusterA_index)
nrow(data_norm)
ClusterB <- data_norm[-ClusterA_index,]
nrow(ClusterA)
nrow(ClusterB)
rownames(data_norm)
data_norm$index <- row.names(data_norm)
head(data_norm)
data_norm$index <- row.names(data_norm)
set.seed(123)
ClusterA <- data_norm[sample(nrow(data_norm),67), ]
ClusterA_index <- as.numeric(ClusterA$index)
length(ClusterA_index)
ClusterB <- data_norm[-ClusterA_index,]
nrow(ClusterA)
nrow(ClusterB)
data_norm$index <- row.names(data_norm)
set.seed(123)
ClusterA <- data_norm[sample(nrow(data_norm),67), ]
ClusterA_index <- as.numeric(ClusterA$index)
length(ClusterA_index)
ClusterA_index <- ClusterA$index
length(ClusterA_index)
ClusterB <- data_norm[-ClusterA_index,]
ClusterA_index <- as.list(ClusterA$index)
length(ClusterA_index)
ClusterB <- data_norm[-ClusterA_index,]
set.seed(123)
ClusterA <- data_norm[sample(nrow(data_norm),67), ]
ClusterA_index <- as.list(ClusterA$index)
length(ClusterA_index)
ClusterB <- data_norm[-ClusterA_index,]
class(ClusterA_index)
ClusterB <- data_norm[-c(ClusterA_index),]
c(ClusterA_index)
ClusterA$index
class(ClusterA_index)
as.list(as.numeric(ClusterA_index))
c(as.list(as.numeric(ClusterA_index)))
x<-data_norm$index
x
set.seed(123)
ClusterA <- data_norm[sample(nrow(data_norm),67), ]
as.numeric(ClusterB$index)
data_norm$index <- row.names(data_norm)
set.seed(123)
ClusterA <- data_norm[sample(nrow(data_norm),67), ]
as.numeric(ClusterA$index)
length(ClusterA_index)
y<-as.numeric(ClusterA$index)
x[y]
x
x<-as.numeric()
x<-as.numeric(x)
x
ClusterA$index
data_norm$index <- row.names(data_norm)
set.seed(123)
ClusterA <- data_norm[sample(nrow(data_norm),67), ]
?split()
data_norm$index <- row.names(data_norm)
set.seed(123)
ClusterA <- data_norm[sample(nrow(data_norm),67), ]
ClusterA$index
ClusterB <- data_norm[-ClusterA,]
?df[]
?[]
ClusterA_index <- ClusterA$index
ClusterB <- data_norm[-ClusterA,]
data_norm$index <- row.names(data_norm)
set.seed(123)
ClusterA <- data_norm[sample(nrow(data_norm),67), ]
ClusterA_index <- ClusterA$index
ClusterB <- data_norm[-ClusterA,]
ClusterB <- data_norm[-ClusterA-index,]
data_norm$index <- row.names(data_norm)
set.seed(123)
ClusterA <- data_norm[sample(nrow(data_norm),67), ]
ClusterA_index <- ClusterA$index
ClusterB <- data_norm[-ClusterA-index,]
ClusterB <- data_norm[-ClusterA_index,]
data <- read.csv("Cereals.csv")
data <- na.omit(data)
data_norm <- cbind(data[, 1:3], scale(data[, -c(1:3)]))
distance <- dist(data_norm[, -c(1:3)], method = "euclidean")
hc1 <- hclust(distance, method = "complete")
plot(hc1, cex = 0.6, hang = -1)
library(cluster)
hc_single <- agnes(data_norm, method = "single")
hc_complete <- agnes(data_norm, method = "complete")
hc_average <- agnes(data_norm, method = "average")
hc_ward <- agnes(data_norm, method = "ward")
hc_single$ac
hc_complete$ac
hc_average$ac
hc_ward$ac
hc_ward <- hclust(distance, method = "ward.D")
plot(hc_ward, cex = 0.6, hang = -1)
rect.hclust(hc_ward, k = 6, border = 1:6)
data_norm$index <- row.names(data_norm)
set.seed(123)
ClusterA <- data_norm[sample(nrow(data_norm),67), ]
ClusterB <- data_norm[-ClusterA_index,]
ClusterB <- data_norm[-ClusterA,]
set.seed(123)
ClusterA <- data_norm[sample(nrow(data_norm),67), ]
ClusterB <- data_norm[-ClusterA,]
?seq_len
ClusterA <- data_norm[sample(seq_len(nrow(data_norm),67)), ]
ClusterA <- data_norm[sample(seq_len(nrow(data_norm),size = 67)), ]
ClusterA <- data_norm[sample(seq_len(nrow(data_norm), size = 67), ]
ClusterA <- data_norm[sample(seq_len(nrow(data_norm), size = 67))]
ClusterA_index <- sample(seq_len(nrow(data_norm)), size = 67)
ClusterA <- data_norm[ClusterA_index,]
ClusterB <- data_norm[-ClusterA_index,]
set.seed(123)
A_index <- sample(seq_len(nrow(data_norm)), size = 67)
A <- data_norm[ClusterA_index,]
set.seed(123)
dataA_index <- sample(seq_len(nrow(data_norm)), size = 67)
dataA <- data_norm[ClusterA_index,]
set.seed(123)
dataA_index <- sample(seq_len(nrow(data_norm)), size = 67)
dataA <- data_norm[dataA_index,]
dataB <- data_norm[-dataA_index,]
dataA_dist <- dist(dataA[, -c(1:3)], method = "euclidean")
hc_A <- hclust(dataA_dist, method = "ward.D")
?cutree
Cluster_A <- cutree(hc_A, k = 6)
Model_A <- cutree(hc_A, k = 6)
summary(Model_A)
Model_A
Model_A <- cutree(hc_A, 6)
Model_A
Model <- cutree(hc_ward, 6)
Model
Model_1 <- cutree(hc_ward, 6)
cbind(data,Model_1)
data$Model_1[-dataA_index, ]
data$Model_1
cbind(data,Model_1)
head(data)
data <- cbind(data,Model_1)
data$Model_1[-dataA_index, ]
data[-dataA_index, c=="Model_1"]
data[-dataA_index, "Model_1"]
dataA <- cbind(Model_A, dataA)
dataA
head(dataA)
data <- cbind(data,Model_1)
head(data)
Model_1 <- cutree(hc_ward, 6)
Model_A <- cutree(hc_A, 6)
dataA <- cbind(Model_A, dataA)
head(dataA)
Model_A <- cutree(hc_A, 6)
Model_A
dataA <- cbind(Model_A, dataA)
str(dataA)
set.seed(123)
dataA_index <- sample(seq_len(nrow(data_norm)), size = 67)
dataA <- data_norm[dataA_index,]
dataB <- data_norm[-dataA_index,]
dataA_dist <- dist(dataA[, -c(1:3)], method = "euclidean")
hc_A <- hclust(dataA_dist, method = "ward.D")
Model_A <- cutree(hc_A, 6)
dataA <- cbind(Model_A, dataA)
head(dataA)
head(data)
set.seed(123)
data <- read.csv("Cereals.csv")
data <- na.omit(data)
data_norm <- cbind(data[, 1:3], scale(data[, -c(1:3)]))
distance <- dist(data_norm[, -c(1:3)], method = "euclidean")
hc1 <- hclust(distance, method = "complete")
plot(hc1, cex = 0.6, hang = -1)
library(cluster)
hc_single <- agnes(data_norm, method = "single")
hc_complete <- agnes(data_norm, method = "complete")
hc_average <- agnes(data_norm, method = "average")
hc_ward <- agnes(data_norm, method = "ward")
hc_single$ac
hc_complete$ac
hc_average$ac
hc_ward$ac
hc_ward <- hclust(distance, method = "ward.D")
plot(hc_ward, cex = 0.6, hang = -1)
rect.hclust(hc_ward, k = 6, border = 1:6)
Model_1 <- cutree(hc_ward, 6)
data <- cbind(data,Model_1)
set.seed(123)
head(dataA)
data
head(data)
data_norm
head(data_norm)
head(dataA)
dataB
dataA_dist <- dist(dataA[, -c(1:3)], method = "euclidean")
set.seed(123)
dataA_index <- sample(seq_len(nrow(data_norm)), size = 67)
dataA <- data_norm[dataA_index,]
dataB <- data_norm[-dataA_index,]
dataA_dist <- dist(dataA[, -c(1:3)], method = "euclidean")
hc_A <- hclust(dataA_dist, method = "ward.D")
Model_A <- cutree(hc_A, 6)
dataA <- cbind(Model_A, dataA)
head(dataA)
dataA[,c(ncol(dataA))]
summary(dataA["Model_A"==1, 2:ncol(dataA)])
colMeans(is.na(dataA))
dataA["Model_A"==1, 2:ncol(dataA)]
1<- dataA["Model_A"==1, 2:ncol(dataA)]
G1<- dataA["Model_A"==1, 2:ncol(dataA)]
G1```
G1
G1<- dataA["Model_A"==1, 2:ncol(dataA)]
G1
library(dplyr)
dataA %>% group_by($Model_A) %>% summarise(centroids)
dataA %>% group_by(Model_A) %>% summarise(centroids)
dataA %>% group_by(Model_A)
dataA %>% group_by(Model_A) %>% summarise(n = nrow())
dataA %>% group_by(Model_A) %>% summarise(n = nrow(dataA))
dataA %>% group_by(Model_A) %>% summarise(n = nrow(dataA))
dataA %>% group_by(Model_A) %>% summarise(n = n())
C1 <- dataA["Model_A"==1, ]
C1 <- dataA["Model_A"==1, ]
summary(C1)
C1
C1 <- dataA[,"Model_A"==1]
C1
C1 <- dataA[,dataA$Model_A == 1]
C1 <- dataA[dataA$Model_A == 1,]
C1
summarise(C1)
summary(C1)
mean(C1)
mean(C1[,4:ncol(dataA)])
colMeans(C1[,4:ncol(dataA)])
str(dataA)
colMeans(C1[,5:ncol(dataA)])
C1 <- colMeans(dataA[dataA$Model_A == 1,5:ncol(dataA)])
print(C1) <- colMeans(dataA[dataA$Model_A == 1,5:ncol(dataA)])
C1 <- colMeans(dataA[dataA$Model_A == 1,5:ncol(dataA)])
C1
C2 <- colMeans(dataA[dataA$Model_A == 2,5:ncol(dataA)])
C3 <- colMeans(dataA[dataA$Model_A == 3,5:ncol(dataA)])
C4 <- colMeans(dataA[dataA$Model_A == 4,5:ncol(dataA)])
C5 <- colMeans(dataA[dataA$Model_A == 5,5:ncol(dataA)])
C6 <- colMeans(dataA[dataA$Model_A == 6,5:ncol(dataA)])
dist(dataB, C1)
dataB
colnames(dataB)
distance <- dist(data_norm[, -c(1:3)], method = "euclidean")
ddistance
distance
Centroids_A <- cbind(C1:6)
Centroids_A <- cbind(C1:C6)
Centroids_A <- cbind(C1, C2, C3, C4, C5, C6)
Centroids_A
dist <- dist(cbind(Centroids_A,dataB))
colnames(dataB)
dist <- dist(cbind(Centroids_A,dataB[,4:ncol(dataB)]))
ncol(Centroids_A)
Centroids_A <- rbind(C1, C2, C3, C4, C5, C6)
dist <- dist(cbind(Centroids_A,dataB[,4:ncol(dataB)]))
Centroids_A
ncol(centroids)
ncol(Centroids_A)
ncol(dataB)
dataB[,4:ncol(dataB)
]
dist <- dist(cbind(Centroids_A,dataB[,4:ncol(dataB)]))
cbind(Centroids_A,dataB[,4:ncol(dataB)])
rbind(Centroids_A,dataB[,4:ncol(dataB)])
dist <- dist(rbind(Centroids_A,dataB[,4:ncol(dataB)]))
dist
which.min(dist$9)
which.min(dist[6.]
which.min(dist[6.])
which.min(dist[6.])
which.min(dist[6,])
data[-dataA_index, "Model_1"]
dist <- dist(rbind(Centroids_A,dataB[,4:ncol(dataB)]))
dist
dataA_index
data[-dataA_index, "Model_1"]
dist[1,]
class(dist)
data.frame(dist)
9<- which.max(2.462441,3.146983,3.782227,5.983747,4.881300,3.826735)
which.max(2.462441,3.146983,3.782227,5.983747,4.881300,3.826735)
which.max(c(2.462441,3.146983,3.782227,5.983747,4.881300,3.826735)
which.max(c(2.462441,3.146983,3.782227,5.983747,4.881300,3.826735))
which.max(c(2.462441,3.146983,3.782227,5.983747,4.881300,3.826735))
data.frame(dist)
dist <- dist(rbind(Centroids_A,dataB[,4:ncol(dataB)]))
dist
data[-dataA_index, "Model_1"]
str(data[-dataA_index, "Model_1"])
data[-dataA_index, "Model_1"]
Assignments<- data[-dataA_index, "Model_1"]
AAssignments
Assignment
Assignments
Assignments$Model_1
class(Assignments)
Assignments<- data.frame(data[-dataA_index, "Model_1"])
Assignments
which.max(c(2.462441,3.146983,3.782227,5.983747,4.881300,3.826735))
which.max(c(2.462441,3.146983,3.782227,5.983747,4.881300,3.826735))
x<- which.max(c(2.462441,3.146983,3.782227,5.983747,4.881300,3.826735))
class(x)
Assignments$Model_A <- 0
Assignments
Assignments[1,2] <- which.max(c(2.462441,3.146983,3.782227,5.983747,4.881300,3.826735))
Assignments
Assignments[2,2] <- which.max(c(2.312626,3.855177, 4.581339, 8.455727 ,4.827885 ,5.441721))
Assignments<- data.frame(data[-dataA_index, "Model_1"])
Assignments$Model_A <- 0
Assignments[1,2] <- which.max(c(2.462441,3.146983,3.782227,5.983747,4.881300,3.826735))
Assignments[2,2] <- which.max(c(2.312626,3.855177, 4.581339, 8.455727 ,4.827885 ,5.441721))
Assignments[3,2] <- which.max(c(3.437484, 1.869957, 4.404072, 8.395433, 4.851045, 4.429787))
Assignments[4,2] <- which.max(c(3.339714, 1.285089 ,4.752289, 8.059830, 4.687570, 3.657016))
Assignments[5,2] <- which.max(c(3.007575 ,3.930439 ,2.431885, 6.230808, 5.027546, 4.008456))
Assignments[6,2] <- which.max(c(3.159701 ,4.694503 ,4.418982, 6.075311, 4.930370, 3.901197))
Assignments[7,2] <- which.max(c(2.691188 ,3.357138, 4.095313, 6.119492, 4.677708, 2.705759))
Assignments
